version: 2

models:
  - name: stg_local_bike_database__brands
    description: "This model contains the mapping between brand ids and brand names for brands distributed in Local Bike"
    columns:
      - name: brand_id
        description: "Primary key, unique identifier for each brand"
        tests:
            - unique
            - not_null
      - name: brand_name
        description: "Brand commercial name"

  - name: stg_local_bike_database__categories
    description: "This model contains the mapping between product category ids and category names for bikes distributed in Local Bike"
    columns:
      - name: category_id
        description: "Primary key, unique identifier for each category"
        tests:
            - unique
            - not_null
      - name: category_name
        description: "Category descriptive name"

  - name: stg_local_bike_database__customers
    description: "This model contains information about the Local Bike customers"
    columns:
      - name: customer_id
        description: "Primary key, unique identifier for each customer"
        tests:
            - unique
            - not_null

  - name: stg_local_bike_database__order_items
    description: "This model contains information about the items included in the orders"
    columns:
      - name: order_item_sk
        description: "Primary key, unique identifier for each order x item combination: generated by concantenation of order_id and item_id"
        tests:
            - unique
            - not_null
      - name: order_id
        description: "Unique identifer for each order. Foreign key linking the order x item to the corresponding order"
        tests:
          - relationships:
              name: order_id_foreign_key_in_stg_local_bike_database__order_items
              to: ref('stg_local_bike_database__orders')
              field: order_id
      - name: item_id
        description: "Unique identifer for each item in a given order"
      - name: product_id
        description: "Unique identifer for each product. Foreign key linking the order x item to the corresponding product"
        tests:
          - relationships:
              name: product_id_foreign_key_in_stg_local_bike_database__order_items
              to: ref('stg_local_bike_database__product')
              field: product_id
      - name: item_discount
        description: "Discount applied to the item. Between 0 and 1"

  - name: stg_local_bike_database__orders
    description: "This model contains information about the orders placed at Local Bike"
    columns:
      - name: order_id
        description: "Primary key, unique identifier for each order"
        tests:
            - unique
            - not_null
      - name: customer_id
        description: "Unique identifer for each customer. Foreign key linking the order to the customer who placed it"
        tests:
          - relationships:
              name: customer_id_foreign_key_in_stg_local_bike_database__orders
              to: ref('stg_local_bike_database__customers')
              field: customer_id
      - name: order_status
        description: "Status of a given order. Code from 1 to 4, no mapping to interpret"
        tests:
            - accepted_values:
                values: [1,2,3,4]
                quote: false
      - name: store_id
        description: "Unique identifer for each store. Foreign key linking the order to the store where it was placed"
        tests:
          - relationships:
              name: store_id_foreign_key_in_stg_local_bike_database__orders
              to: ref('stg_local_bike_database__stores')
              field: store_id
      - name: staff_id
        description: "Unique identifer for each staff member. Foreign key linking the order to the staff member who took it"
        tests:
          - relationships:
              name: staff_id_foreign_key_in_stg_local_bike_database__orders
              field: staff_id
              to: ref('stg_local_bike_database__staffs')

  - name: stg_local_bike_database__products
    description: "This model contains information about the products available in Local Bike's catalog"
    columns:
      - name: product_id
        description: "Primary key, unique identifier for each product"
        tests:
            - unique
            - not_null
      - name: product_name
        description: "Product detailed commercial name"
      - name: product_brand_id
        description: "Unique identifer for each brand. Foreign key linking the product to its brand"
        tests:
          - relationships:
              name: brand_id_foreign_key_in_stg_local_bike_database__products
              to: ref('stg_local_bike_database__brands')
              field: brand_id
      - name: product_category_id
        description: "Unique identifer for each product category. Foreign key linking the product to its category"
        tests:
          - relationships:
              name: category_id_foreign_key_in_stg_local_bike_database__products
              to: ref('stg_local_bike_database__categories')
              field: category_id

  - name: stg_local_bike_database__staffs
    description: "This model contains information about the staff members operating at Local Bike"
    columns:
      - name: staff_id
        description: "Primary key, unique identifier for each staff member"
        tests:
            - unique
            - not_null
      - name: is_staff_active
        description: "True is the staff member is active, False if inactive"
      - name: staff_store_id
        description: "Unique identifer for each store. Foreign key linking the staff member to the store she/he operates in"
        tests:
          - relationships:
              name: store_id_foreign_key_in_stg_local_bike_database__staffs
              to: ref('stg_local_bike_database__stores')
              field: store_id
      - name: staff_manager_id
        description: "Unique identifer for each staff member's manager. Foreign key linking the the staff member to her/his manager, which is identified in this same table"
        # test functioning to be validated - otherwise tranform to singular test
        tests:
          - relationships:
              name: manager_id_foreign_key_in_stg_local_bike_database__staffs
              to: ref('stg_local_bike_database__staffs')
              field: staff_id

  - name: stg_local_bike_database__stocks
    description: "This model contains information about the product stocks available in Local Bike's stores"
    columns:
      - name: store_product_sk
        description: "Primary key, unique identifier for each store x product combination: generated by concatenation of store_id and product_id"
        tests:
            - unique
            - not_null
      - name: store_id
        description: "Unique identifer for each store. Foreign key linking the store x product to the corresponding store"
        tests:
          - relationships:
              name: store_id_foreign_key_in_stg_local_bike_database__stocks
              to: ref('stg_local_bike_database__stores')
              field: store_id
      - name: product_id
        description: "Unique identifer for each product. Foreign key linking the store x product to the corresponding product"
        tests:
          - relationships:
              name: product_id_foreign_key_in_stg_local_bike_database__stocks
              to: ref('stg_local_bike_database__products')
              field: product_id

  - name: stg_local_bike_database__stores
    description: "This model contains information about the Local Bike stores"
    columns:
      - name: store_id
        description: "Primary key, unique identifier for each store"
        tests:
            - unique
            - not_null